#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "L0";
            bindings = <
&kp ESCAPE      &kp Q     &kp W             &kp E            &kp R      &kp T                 &kp Y      &kp U  &kp I      &kp O    &kp P       &kp BACKSPACE
&kp LCTRL       &kp A     &kp S             &kp D            &kp F      &kp G                 &kp H      &kp J  &kp K      &kp L    &lt 2 SEMI  &lt 2 SQT
&kp LEFT_SHIFT  &kp Z     &kp X             &kp C            &kp V      &kp B                 &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH   &kp RIGHT_SHIFT
&kp LGUI        &kp LALT  &kp LEFT_COMMAND  &lt 1 BACKSPACE  &kp SPACE             &kp ENTER  &lt 1 TAB                                         &kp RIGHT_ALT
            >;
        };

        symbols_nav_layer {
            label = "L1";
            bindings = <
&trans          &kp EXCLAMATION  &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE               &kp EQUAL      &kp PLUS       &kp MINUS     &kp UNDERSCORE     &kp ASTERISK  &none
&trans          &kp HASH         &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE              &kp LEFT       &kp DOWN       &kp UP_ARROW  &kp RIGHT          &lt 2 COLON   &lt 2 SQT
&kp LEFT_SHIFT  &kp PERCENT      &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE              &kp AMPERSAND  &kp BACKSLASH  &kp SQT       &kp DOUBLE_QUOTES  &trans        &trans
&trans          &trans           &trans      &trans                &trans                                &trans  &kp BACKSPACE                                                                &kp RIGHT_ALT
            >;
        };

        nums_shortcuts_layer {
            label = "L2";
            bindings = <
&kp NUMBER_0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&lt 3 LEFT_CONTROL  &mt A F1      &kp F2        &kp F3         &kp F4        &kp F5                    &kp F6        &mkp LCLK     &mkp MCLK     &mkp RCLK     &lt 2 F10     &lt 3 SQT
&none               &kp LG(Z)     &kp LG(X)     &kp LG(C)      &kp LG(V)     &mkp MCLK                 &kp F11       &kp F12       &kp COMMA     &kp PERIOD    &kp SLASH     &kp CAPSLOCK
&mkp LCLK           &mkp RCLK     &trans        &kp BACKSPACE  &trans                          &trans  &lt 4 TAB                                                             &trans
            >;
        };

        extended_layer {
            label = "L3";
            bindings = <
&to 0   &kp EXCLAMATION  &kp AT_SIGN    &kp HASH       &kp DOLLAR    &bt BT_CLR                &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&to 1   &bt BT_DISC 0    &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_SEL 2  &trans                    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &lt 2 SEMICOLON        &lt 3 SQT
&to 2   &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4              &kp UNDERSCORE  &kp PLUS       &trans            &trans                &kp NON_US_BACKSLASH   &none
&trans  &trans           &trans         &trans         &trans                          &trans  &trans                                                                                        &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp N1          &kp N2          &kp N3        &kp N4     &kp N5              &kp N6         &kp N7     &kp N8  &kp N9     &kp N0     &none
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none               &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK  &none
&none   &none           &none           &none         &none      &none               &kp PAGE_DOWN  &none      &none   &none      &none      &none
&trans  &trans          &trans          &trans        &trans                 &trans  &trans                                                  &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
